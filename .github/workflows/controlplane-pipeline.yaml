name: Infrastructure Control Plane CI/CD

on:
  push:
    branches: master
  workflow_dispatch:
    inputs:
      TARGET_ENV:
        description: 'Target environment'
        required: true
        default: 'primary'
        type: choice
        options:
          - primary
          - sandbox
      ACTION:
        description: 'Action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
          - init
          - plan
          - apply
          - bigbang_diff
          - bigbang_upgrade

env:
  GITHUB_BASE_URL: https://github.com/DRE-IaC/
  REPOSITORY_NAME: infrastructure-controlplane-2
  AWS_REGION: us-east-2
  AWS_ROLE_ARN: arn:aws:iam::344565808703:role/controlplane

permissions:
  id-token: write   # Required for OIDC
  contents: read    # Required to checkout the repository

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      TARGET_ENV: ${{ github.event.inputs.TARGET_ENV || 'primary' }}
      ACTION: ${{ github.event.inputs.ACTION || 'plan' }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Single AWS authentication step using the defined role
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Show caller identity
        run: aws sts get-caller-identity
      
      - name: Install dependencies
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          DESIRED_VERSION=v3.9.3 ./get_helm.sh
          helm plugin install https://github.com/databus23/helm-diff
          pip install --upgrade pip
          sudo apt update
          sudo apt-get install -y gnupg software-properties-common
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-add-repository ppa:ansible/ansible
          sudo apt update
          sudo apt install -y terraform git pax ansible
          pip3 install awscli
          terraform version
          echo "Updates and installs are done"

      # Create AWS config file for role assumption
      - name: Configure AWS profiles
        run: |
          mkdir -p ~/.aws
          cat << EOF > ~/.aws/config
          [profile controlplane]
          credential_source = Environment
          role_arn = ${AWS_ROLE_ARN}
          EOF
          
      - name: Configure EKS access (if needed)
        if: ${{ env.ACTION == 'bigbang_diff' || env.ACTION == 'bigbang_upgrade' }}
        run: |
          aws eks update-kubeconfig --name dre-primary2 --region ${{ env.AWS_REGION }}

      # Always run terraform init first, regardless of the action
      - name: Initialize Terraform
        run: |
          aws sts get-caller-identity --profile controlplane --region ${{ env.AWS_REGION }}
          ./tf.sh -e ${{ env.TARGET_ENV }} -a init -v true --code-pipeline on

      - name: Run requested action
        if: ${{ env.ACTION != 'init' }}  # Skip if action is init since we already did it
        run: |
          if [[ "${{ env.ACTION }}" == "plan" ]]; then
            echo "Running 'plan', used to plan the infrastructure deployment."
            ./tf.sh -e ${{ env.TARGET_ENV }} -a plan --code-pipeline on
          fi

          if [[ "${{ env.ACTION }}" == "apply" ]]; then
            echo "Running 'apply', used to deploy the infrastructure plan."
            ./tf.sh -e ${{ env.TARGET_ENV }} -a apply --skip-interactive on --code-pipeline on
          fi

          if [[ "${{ env.ACTION }}" == "bigbang_diff" ]]; then
            echo "Running 'bigbang_diff', used to show a diff of the helm charts with the installed charts in the cluster."
            ./tf.sh -e ${{ env.TARGET_ENV }} -a bigbang_diff --skip-interactive on --code-pipeline on
          fi

          if [[ "${{ env.ACTION }}" == "bigbang_upgrade" ]]; then
            echo "Running 'bigbang_upgrade', used to do a helm upgrade-install on all helm charts for our cluster."
            ./tf.sh -e ${{ env.TARGET_ENV }} -a bigbang_upgrade --skip-interactive on --code-pipeline on
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: ./**/*