name: Terraform CI/CD

on:
  push:
    branches: master
  workflow_dispatch:

env:
  AWS_REGION: us-east-1  # Update with your AWS region
  TF_VERSION: 1.5.0      # Update with your Terraform version

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}
        
    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="bucket=use2-iac-controlplane-tf-states-snarrabelly" \
          -backend-config="key=env:/primary/terraform.tfstate" \
          -backend-config="region=${{ env.AWS_REGION }}"
      
    - name: Terraform Format
      run: terraform fmt -check
      
    - name: Terraform Validate
      run: terraform validate
      
    - name: Terraform Plan
      if: github.event_name == 'pull_request'
      id: plan
      run: terraform plan -no-color
      
    - name: Post Plan to PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Plan üìù\`${{ steps.plan.outcome }}\`
          
          <details><summary>Show Plan</summary>
          
          \`\`\`terraform
          ${process.env.PLAN}
          \`\`\`
          
          </details>`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
      env:
        PLAN: "${{ steps.plan.outputs.stdout }}"
      
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: terraform apply -auto-approve